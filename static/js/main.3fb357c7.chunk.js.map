{"version":3,"sources":["api.js","components/UserCards/UserCards.js","components/SearchFilter/SearchFilter.js","App.js","serviceWorker.js","index.js"],"names":["getList","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","api","response","result","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","UserCards","item","react_default","createElement","renderprops","from","transform","to","enter","opacity","leave","config","duration","delay","props","key","id","className","style","src","image","alt","name","gender","species","SearchFilter","handleSort","handleSearch","handleFilter","onChange","_ref3","target","checked","defineProperty","value","type","htmlFor","placeholder","aria-label","aria-describedby","_ref2","searchInputValue","App","state","list","filterSpecies","sortOrder","isLoaded","notFound","currentPageUrl","nextPageUrl","prevPageUrl","handleClickNext","_this","then","data","setState","results","info","handleClickPrev","performSearch","performSort","performFilter","sortPersons","sort","b","filterByName","filter","includes","filterBySpecies","_this$state","onClick","disabled","components_SearchFilter_SearchFilter","map","components_UserCards_UserCards","assign","length","role","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fb357c7.chunk.js","sourcesContent":["//const API_KEY = 'a87e80b7f051a451181ad59776a0290a';\r\n//const API_HASH='6ba6f66634f26f6ed96f15e92bc1d428';\r\n//http://gateway.marvel.com/v1/public/comics?format=digital%20comic&ts=1&apikey=${API_KEY}&hash=${API_HASH}\r\n\r\nexport const getList = async (api) => {\r\n  const response  = await fetch(api);\r\n  const result = await response.json();\r\n  //console.log(result);\r\n  return result;\r\n}\r\n","import React from 'react';\r\nimport { Spring } from 'react-spring/renderprops';\r\n\r\nconst UserCards = item => (\r\n  <Spring\r\n    from={{ transform: 'scale(0)' }}\r\n    to={{ transform: 'scale(1)' }}\r\n    enter={{ opacity: 0 }}\r\n    leave={{ opacity: 1 }}\r\n    config={{ duration: 200, delay: 200 }}\r\n  >\r\n    {props => (\r\n      <div key={item.id} className='user' style={props}>\r\n        <div className='card__main'>\r\n          <img className='card-img-top' src={item.image} alt={item.name} />\r\n          <div className='card-body'>\r\n            <h3 className='card__header'>{item.name}</h3>\r\n            <p className='list-item'>{item.gender}</p>\r\n            <p className='list-item'>{item.species}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </Spring>\r\n);\r\n\r\nexport default UserCards;\r\n","import React from 'react';\r\nimport './searchfilter.css';\r\n\r\nconst SearchFilter = ({ handleSort, handleSearch, handleFilter }) => {\r\n  const onChange = ({ target }) => {\r\n    const value = target.name === 'change' ? target.value : '';\r\n\r\n    handleSearch({\r\n      searchInputValue: value\r\n    });\r\n  };\r\n\r\n  const onSortOrFileter = ({ target }) => {\r\n    if (target.checked && target.name === 'sortOrder') {\r\n      handleSort({\r\n        [target.name]: target.value\r\n      });\r\n    }\r\n    if (target.checked && target.name === 'filterSpecies') {\r\n      handleFilter({\r\n        [target.name]: target.value\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className='form__main' onChange={onSortOrFileter}>\r\n      <div className='radio-buttons'>\r\n        <div className='sort-asc-desc'>\r\n          <div className='form-check'>\r\n            <input\r\n              className='form-check-input'\r\n              type='radio'\r\n              name='sortOrder'\r\n              id='inlineRadio1'\r\n              value='asc'\r\n            />\r\n            <label className='form-check-label' htmlFor='inlineRadio1'>\r\n              Sort by Asc\r\n            </label>\r\n          </div>\r\n          <div className='form-check'>\r\n            <input\r\n              className='form-check-input'\r\n              type='radio'\r\n              name='sortOrder'\r\n              id='inlineRadio2'\r\n              value='desc'\r\n            />\r\n            <label className='form-check-label' htmlFor='inlineRadio2'>\r\n              Sort by Desc\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='sort-asc-desc'>\r\n          <div className='form-check'>\r\n            <input\r\n              className='form-check-input'\r\n              type='radio'\r\n              name='filterSpecies'\r\n              id='inlineRadio3'\r\n              value='Human'\r\n            />\r\n            <label className='form-check-label' htmlFor='inlineRadio3'>\r\n              Filter by Human\r\n            </label>\r\n          </div>\r\n          <div className='form-check'>\r\n            <input\r\n              className='form-check-input'\r\n              type='radio'\r\n              name='filterSpecies'\r\n              id='inlineRadio4'\r\n              value='Alien'\r\n            />\r\n            <label className='form-check-label' htmlFor='inlineRadio4'>\r\n              Filter by Alien\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='input-group'>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          name='change'\r\n          placeholder='search by name... '\r\n          aria-label=\"Recipient's username\"\r\n          aria-describedby='button-addon2'\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchFilter;\r\n","import React, { Component } from 'react';\r\nimport './App.sass';\r\nimport { getList } from './api';\r\nimport UserCards from './components/UserCards/UserCards';\r\nimport SearchFilter from './components/SearchFilter/SearchFilter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    list: null,\r\n    filterSpecies: null,\r\n    sortOrder: null,\r\n    isLoaded: false,\r\n    searchInputValue: null,\r\n    notFound: null,\r\n    currentPageUrl: 'https://rickandmortyapi.com/api/character',\r\n    nextPageUrl: '',\r\n    prevPageUrl: ''\r\n  };\r\n\r\n  handleClickNext = () => {\r\n    getList(this.state.nextPageUrl).then(data => {\r\n      this.setState({\r\n        list: data.results,\r\n        nextPageUrl: data.info.next,\r\n        prevPageUrl: data.info.prev\r\n      });\r\n    });\r\n  };\r\n\r\n  handleClickPrev = () => {\r\n    getList(this.state.prevPageUrl).then(data => {\r\n      this.setState({\r\n        list: data.results,\r\n        nextPageUrl: data.info.next,\r\n        prevPageUrl: data.info.prev\r\n      });\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const list = await getList(this.state.currentPageUrl);\r\n    this.setState({\r\n      list: list.results,\r\n      data: list,\r\n      nextPageUrl: list.info.next,\r\n      isLoaded: true\r\n    });\r\n  }\r\n\r\n  performSearch = ({ searchInputValue }) => {\r\n    this.setState({ searchInputValue });\r\n  };\r\n\r\n  performSort = ({ sortOrder }) => {\r\n    this.setState({ sortOrder });\r\n  };\r\n\r\n  performFilter = ({ filterSpecies }) => {\r\n    this.setState({ filterSpecies });\r\n  };\r\n\r\n  sortPersons = (list, state) => {\r\n    if (state === 'desc') {\r\n      return list.sort((a, b) => (a.name < b.name ? 1 : -1));\r\n    } else {\r\n      return list.sort((a, b) => (a.name < b.name ? -1 : 1));\r\n    }\r\n  };\r\n\r\n  filterByName = (list, name) => list.filter(item => item.name.includes(name));\r\n\r\n  filterBySpecies = (list, species) =>\r\n    list.filter(item => item.species === species);\r\n\r\n  render() {\r\n    const {\r\n      list,\r\n      isLoaded,\r\n      notFound,\r\n      searchInputValue,\r\n      sortOrder,\r\n      filterSpecies,\r\n      prevPageUrl,\r\n      nextPageUrl\r\n    } = this.state;\r\n    let result = list;\r\n\r\n    if (sortOrder) {\r\n      result = this.sortPersons(list, sortOrder);\r\n    }\r\n\r\n    if (filterSpecies) {\r\n      result = this.filterBySpecies(list, filterSpecies);\r\n    }\r\n\r\n    if (searchInputValue) {\r\n      result = this.filterByName(list, searchInputValue);\r\n    }\r\n\r\n    if (!isLoaded) {\r\n      return (\r\n        <div className='preloader'>\r\n          <div className='pulse' />\r\n        </div>\r\n      );\r\n    }\r\n    if (notFound) {\r\n      return (\r\n        <div className='preloader'>\r\n          <div className='pulse' />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className='container'>\r\n        <section className='main-section'>\r\n          <aside className='filter'>\r\n            <div className='buttons-group'>\r\n              <button\r\n                className='button'\r\n                onClick={this.handleClickPrev}\r\n                disabled={!prevPageUrl}\r\n              >\r\n                ← Prev Page\r\n              </button>\r\n              <button\r\n                className='button'\r\n                onClick={this.handleClickNext}\r\n                disabled={!nextPageUrl}\r\n              >\r\n                Next Page →\r\n              </button>\r\n            </div>\r\n\r\n            <SearchFilter\r\n              handleSearch={this.performSearch}\r\n              handleSort={this.performSort}\r\n              handleFilter={this.performFilter}\r\n            />\r\n          </aside>\r\n          <div className='users-wrap'>\r\n            <div className='users'>\r\n              {result.map(item => (\r\n                <UserCards key={item.id} {...item} />\r\n              ))}\r\n            </div>\r\n            {result.length === 0 ? (\r\n              <div className='not-found'>\r\n                Oops, Nothing found{' '}\r\n                <span role='img' aria-label='img'>\r\n                  😱\r\n                </span>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}