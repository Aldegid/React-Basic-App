{"version":3,"sources":["api.js","components/UserCards/UserCards.js","components/SearchFilter/SearchFilter.js","App.js","serviceWorker.js","index.js"],"names":["getList","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","api","response","result","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","UserCards","item","react_default","createElement","renderprops","from","transform","to","enter","opacity","leave","config","duration","delay","props","key","id","className","style","src","image","alt","name","gender","species","SearchFilter","handleSort","handleSearch","handleFilter","onSort","e","target","defineProperty","checked","type","value","radioState","onFilter","onChange","htmlFor","placeholder","aria-label","aria-describedby","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClickNext","state","nextApiUrl","then","data","setState","list","results","info","prevApiUrl","handleClickPrev","performSearch","change","performSort","_ref2","sortAscDesc","performFilter","_ref3","filterSpecies","sortByAsc","sort","b","sortByDesc","sortPersons","filterByName","filter","includes","filterBySpecies","isLoaded","notFound","currentApiUrl","_this$state","onClick","disabled","components_SearchFilter_SearchFilter","map","components_UserCards_UserCards","assign","length","role","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.198690d4.chunk.js","sourcesContent":["//const API_KEY = 'a87e80b7f051a451181ad59776a0290a';\r\n//const API_HASH='6ba6f66634f26f6ed96f15e92bc1d428';\r\n//http://gateway.marvel.com/v1/public/comics?format=digital%20comic&ts=1&apikey=${API_KEY}&hash=${API_HASH}\r\n\r\nexport const getList = async (api) => {\r\n  const response  = await fetch(api);\r\n  const result = await response.json();\r\n  //console.log(result);\r\n  return result;\r\n}\r\n","import React from 'react';\r\nimport { Spring } from 'react-spring/renderprops';\r\n\r\nconst UserCards = item => (\r\n  <Spring\r\n    from={{ transform: 'scale(0)' }}\r\n    to={{ transform: 'scale(1)' }}\r\n    enter={{ opacity: 0 }}\r\n    leave={{ opacity: 1 }}\r\n    config={{ duration: 200, delay: 200 }}\r\n  >\r\n    {props => (\r\n      <div key={item.id} className='user' style={props}>\r\n        <div className='card__main'>\r\n          <img className='card-img-top' src={item.image} alt={item.name} />\r\n          <div className='card-body'>\r\n            <h3 className='card__header'>{item.name}</h3>\r\n            <p className='list-item'>{item.gender}</p>\r\n            <p className='list-item'>{item.species}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </Spring>\r\n);\r\n\r\nexport default UserCards;\r\n","import React from 'react';\r\nimport './searchfilter.css';\r\n\r\nconst SearchFilter = ({ handleSort, handleSearch, handleFilter }) => {\r\n  const onChange = e => {\r\n    const target = e.target;\r\n    const value = target.name === 'change' ? target.value : '';\r\n\r\n    handleSearch({\r\n      [target.name]: value\r\n    });\r\n  };\r\n  const onSort = e => {\r\n    const target = e.target;\r\n    const radioState = () => {\r\n      if (target.checked && target.type === 'radio') {\r\n        return target.value;\r\n      }\r\n    };\r\n    handleSort({\r\n      [target.name]: radioState()\r\n    });\r\n  };\r\n  const onFilter = e => {\r\n    const target = e.target;\r\n    const radioState = () => {\r\n      if (target.checked && target.type === 'radio') {\r\n        return target.value;\r\n      }\r\n    };\r\n    handleFilter({\r\n      [target.name]: radioState()\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className='form__main'>\r\n      <div className='radio-buttons'>\r\n        <div className='sort-asc-desc'>\r\n          <div className='form-check'>\r\n            <input\r\n              className='form-check-input'\r\n              type='radio'\r\n              name='sortAscDesc'\r\n              id='inlineRadio1'\r\n              value='asc'\r\n              onChange={onSort}\r\n            />\r\n            <label className='form-check-label' htmlFor='inlineRadio1'>\r\n              Sort by Asc\r\n            </label>\r\n          </div>\r\n          <div className='form-check'>\r\n            <input\r\n              className='form-check-input'\r\n              type='radio'\r\n              name='sortAscDesc'\r\n              id='inlineRadio2'\r\n              value='desc'\r\n              onChange={onSort}\r\n            />\r\n            <label className='form-check-label' htmlFor='inlineRadio2'>\r\n              Sort by Desc\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='sort-asc-desc'>\r\n          <div className='form-check'>\r\n            <input\r\n              className='form-check-input'\r\n              type='radio'\r\n              name='filterSpecies'\r\n              id='inlineRadio3'\r\n              value='human'\r\n              onChange={onFilter}\r\n            />\r\n            <label className='form-check-label' htmlFor='inlineRadio3'>\r\n              Filter by Human\r\n            </label>\r\n          </div>\r\n          <div className='form-check'>\r\n            <input\r\n              className='form-check-input'\r\n              type='radio'\r\n              name='filterSpecies'\r\n              id='inlineRadio4'\r\n              value='alien'\r\n              onChange={onFilter}\r\n            />\r\n            <label className='form-check-label' htmlFor='inlineRadio4'>\r\n              Filter by Alien\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='input-group'>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          name='change'\r\n          placeholder='search by name... '\r\n          aria-label=\"Recipient's username\"\r\n          aria-describedby='button-addon2'\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchFilter;\r\n","import React, { Component } from 'react';\r\nimport './App.sass';\r\nimport { getList } from './api';\r\nimport UserCards from './components/UserCards/UserCards';\r\nimport SearchFilter from './components/SearchFilter/SearchFilter';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: null,\r\n      filterSpecies: null,\r\n      sortAscDesc: null,\r\n      isLoaded: false,\r\n      change: null,\r\n      notFound: null,\r\n      currentApiUrl: 'https://rickandmortyapi.com/api/character',\r\n      nextApiUrl: '',\r\n      prevApiUrl: ''\r\n    };\r\n  }\r\n\r\n  handleClickNext = () => {\r\n    getList(this.state.nextApiUrl).then(data => {\r\n      this.setState({\r\n        list: data.results,\r\n        nextApiUrl: data.info.next,\r\n        prevApiUrl: data.info.prev\r\n      });\r\n    });\r\n  };\r\n\r\n  handleClickPrev = () => {\r\n    getList(this.state.prevApiUrl).then(data => {\r\n      this.setState({\r\n        list: data.results,\r\n        data: data,\r\n        nextApiUrl: data.info.next,\r\n        prevApiUrl: data.info.prev\r\n      });\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const list = await getList(this.state.currentApiUrl);\r\n    this.setState({\r\n      list: list.results,\r\n      data: list,\r\n      nextApiUrl: list.info.next,\r\n      isLoaded: true\r\n    });\r\n  }\r\n\r\n  performSearch = ({ change }) => {\r\n    this.setState({ change });\r\n  };\r\n\r\n  performSort = ({ sortAscDesc }) => {\r\n    this.setState({ sortAscDesc });\r\n  };\r\n\r\n  performFilter = ({ filterSpecies }) => {\r\n    this.setState({ filterSpecies });\r\n  };\r\n\r\n  sortByAsc = list => list.sort((a, b) => (a.name < b.name ? -1 : 1));\r\n\r\n  sortByDesc = list => list.sort((a, b) => (a.name < b.name ? 1 : -1));\r\n\r\n  sortPersons = (list, state) => {\r\n    if (state === 'desc') {\r\n      return list.sort((a, b) => (a.name < b.name ? 1 : -1));\r\n    } else {\r\n      return list.sort((a, b) => (a.name < b.name ? -1 : 1));\r\n    }\r\n  };\r\n\r\n  filterByName = (list, name) => list.filter(item => item.name.includes(name));\r\n\r\n  filterBySpecies = (list, species) =>\r\n    list.filter(item => item.species === species);\r\n\r\n  render() {\r\n    const {\r\n      list,\r\n      isLoaded,\r\n      notFound,\r\n      change,\r\n      sortAscDesc,\r\n      filterSpecies,\r\n      prevApiUrl,\r\n      nextApiUrl\r\n    } = this.state;\r\n    let result = list;\r\n\r\n    if (sortAscDesc) {\r\n      result = this.sortPersons(list, sortAscDesc);\r\n    }\r\n\r\n    if (filterSpecies) {\r\n      result =\r\n        filterSpecies === 'human'\r\n          ? this.filterBySpecies(list, 'Human')\r\n          : this.filterBySpecies(list, 'Alien');\r\n    }\r\n\r\n    if (change) {\r\n      result = this.filterByName(list, change);\r\n    }\r\n\r\n    if (!isLoaded) {\r\n      return (\r\n        <div className='preloader'>\r\n          <div className='pulse' />\r\n        </div>\r\n      );\r\n    }\r\n    if (notFound) {\r\n      return (\r\n        <div className='preloader'>\r\n          <div className='pulse' />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className='container'>\r\n        <section className='main-section'>\r\n          <aside className='filter'>\r\n            <div className='buttons-group'>\r\n              <button\r\n                className='button'\r\n                onClick={this.handleClickPrev}\r\n                disabled={!prevApiUrl}\r\n              >\r\n                ← Prev Page\r\n              </button>\r\n              <button\r\n                className='button'\r\n                onClick={this.handleClickNext}\r\n                disabled={!nextApiUrl}\r\n              >\r\n                Next Page →\r\n              </button>\r\n            </div>\r\n\r\n            <SearchFilter\r\n              handleSearch={this.performSearch}\r\n              handleSort={this.performSort}\r\n              handleFilter={this.performFilter}\r\n            />\r\n          </aside>\r\n          <div className='users-wrap'>\r\n            <div className='users'>\r\n              {result.map(item => {\r\n                return <UserCards key={item.id} {...item} />;\r\n              })}\r\n            </div>\r\n            {result.length === 0 ? (\r\n              <div className='not-found'>\r\n                Oops, Nothing found{' '}\r\n                <span role='img' aria-label='img'>\r\n                  😱\r\n                </span>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}